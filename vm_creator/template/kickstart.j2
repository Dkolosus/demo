# Generated by Anaconda 34.25.2.10
# Generated by pykickstart v3.32
#version=OL9
# Use text install
text

%addon com_redhat_kdump --enable --reserve-mb='auto'
%end


# Keyboard layouts
keyboard --xlayouts='us'
# System language
lang en_US.UTF-8

%packages
@^minimal-environment
openssh-server
qemu-guest-agent
%end

# Run the Setup Agent on first boot
firstboot --enable

# Generated using Blivet version 3.6.0
ignoredisk --only-use=sda

# Pre Install pv create vg create
%pre
#vgchange -y -ff -a n --select pv_name=/dev/sda
#vgremove -y -ff --select pv_name=/dev/sda
#pvremove -y -ff /dev/sda
#pvcreate /dev/sda
#vgcreate vg01 /dev/sda
#vgscan
#parted -s /dev/sda -- mklabel gpt mkpart primary ext4 0 1000M  mkpart primary ext4 1000M 100%
%end

# Partition clearing information
clearpart --all --initlabel

# Disk partitioning information
{% set hd_s  = namespace(value=(hd * 1000)) %}
{% if efi  is true %}
part /boot/efi --fstype="efi" --size=512
{% set efi  = 512 %}
{% set hd_s.value  = (hd_s.value - efi) %}
{% endif %}
part /boot --fstype=xfs  --ondisk=sda --size=1024
{% set hd_s.value  = (hd_s.value - 1024) %}
{% if lvm  is true %}
{% set lv_n = namespace(value=0) %}
partition pv.155 --fstype="lvmpv" --ondisk=sda --size={{ hd_s.value }}
volgroup vg01 --pesize=4096 pv.155
{% if swap  is true %}
logvol swap  --recommended --name=swap --vgname=vg01
{% set hd_s.value  = (hd_s.value - (memory|int * 2)) %}
{% endif %}
{% for key, value  in dict_part.items() %}
{% if key  == '/' %}
logvol {{ key  }} --fstype="xfs" --size={{ value|int * 1024 }} --name=root --vgname=vg01
{% set hd_s.value  = (hd_s.value - (value|int * 1024)) %}
{% endif %}
{% if key  != '/' %}
{% if (value|int * 1024) > hd_s.value %}
logvol {{ key  }} --fstype="xfs" --size={{ hd_s.value  }} --name=lvm_{{ lv_n.value  }} --vgname=vg01
{% endif %}
{% if (value|int * 1024) < hd_s.value %}
logvol {{ key  }} --fstype="xfs" --size={{ value|int * 1024 }} --name=lvm_{{ lv_n.value  }} --vgname=vg01
{% set hd_s.value  = (hd_s.value - (value|int * 1024)) %}
{% endif %}
{% endif %}
{% set lv_n.value = (lv_n.value + 1) %}
{% endfor %}
{% endif %}
{% if lvm  is false %}
{% if swap  is true %}
part swap  --ondisk=sda --size={{ memory|int * 2 }}
{% set hd_s.value  = (hd_s.value - (memory|int * 2)) %}
{% endif %}
{% for key, value  in dict_part.items() %}
{% if (value|int * 1024) < hd_s.value %}
part {{ key  }} --fstype="xfs" --ondisk=sda --size={{ value|int * 1024 }}
{% else %}
part {{ key  }} --fstype="xfs" --ondisk=sda --size={{ hd_s.value }}
{% endif %}
{% set hd_s.value  = (hd_s.value - (value|int * 1024)) %}
{% endfor %}
{% endif %}

# NTP
#timesource --ntp-server _gateway

# System timezone
timezone Europe/Moscow --utc

# Network
network --bootproto={{ network.bootproto  }} --ip={{ network.ip  }} --netmask={{ network.netmask  }} --gateway={{ network.gateway }} --nameserver={{ network.nameserver }} --hostname={{ network.hostname }}

# Root password
rootpw --lock

# And ssh key


# User
user --groups=wheel --name=support --password=

%post

# Audit
sed -i -e 's/^max_log_file_action = .*$/max_log_file_action = keep_logs/' \
 -e 's/^space_left_action = .*$/space_left_action = SYSLOG/' \
 -e 's/^admin_space_left = .*$/admin_space_left = 1%/' /etc/audit/auditd.conf

cat << EOF_AUDIT > /etc/audit/rules.d/50-scope.rules
-w /etc/sudoers -p wa -k scope
-w /etc/sudoers.d -p wa -k scope
EOF_AUDIT

echo "-e 2" > /etc/audit/rules.d/99-finalize.rules

/sbin/augenrules

sed -i -r -e 's/(^GRUB_CMDLINE_LINUX=.*)"/\1 audit=1 audit_backlog_limit=8192"/' /etc/default/grub

/sbin/grub2-mkconfig -o /boot/grub2/grub.cfg --update-bls-cmdline

# Misc
echo "Authorized uses only. All activity may be monitored and reported." > /etc/issue
echo "Authorized uses only. All activity may be monitored and reported." > /etc/issue.net

sed -i -e 's/^#Storage=.*/Storage=none/' \
 -e 's/^#ProcessSizeMax=.*/ProcessSizeMax=0/' /etc/systemd/coredump.conf

# Auth
groupadd sugroup
sed -i -e '/pam_rootok.so/a auth            required        pam_wheel.so use_uid group=sugroup' /etc/pam.d/su

cat << EOF_SUDOERS > /etc/sudoers.d/cis
Defaults    use_pty
Defaults logfile="/var/log/sudo.log"
EOF_SUDOERS

chmod 600 /etc/sudoers.d/cis

# Logging
echo '$FileCreateMode 0640' > /etc/rsyslog.d/createmode.conf

sed -i -e '/sharedscripts/a \    rotate 99' /etc/logrotate.d/rsyslog

cat << EOF_SUDOLOG > /etc/logrotate.d/sudo
/var/log/sudo.log
{
    missingok
    rotate 99
}
EOF_SUDOLOG
 
sed -i -e 's/^#Storage=.*/Storage=persistent/' \
 -e 's/^#Compress=.*/Compress=yes/' \
 -e 's/^#ForwardToSyslog=.*/ForwardToSyslog=yes/' /etc/systemd/journald.conf

# SSH
cat << EOF_SSH_CIS > /etc/ssh/sshd_config.d/30-cis.conf
LoginGraceTime 60
MaxAuthTries 4
AllowTcpForwarding no
X11Forwarding no
ClientAliveInterval 15
ClientAliveCountMax 3
MaxStartups 10:30:60
PermitRootLogin prohibit-password
Banner /etc/issue.net
EOF_SSH_CIS

chmod 600 /etc/ssh/sshd_config.d/30-cis.conf
%end

# Reboot when the install is finished.
reboot
